# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix") ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "virtio_pci" "usbhid" "usb_storage" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/536d2db0-bc70-474c-aba3-db66a81c12fe";
      fsType = "btrfs";
      options = [ "noatime" "compress-force=zstd:2" "discard=async" "commit=120" "clear_cache" "space_cache=v2" "subvol=@" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/536d2db0-bc70-474c-aba3-db66a81c12fe";
      fsType = "btrfs";
      options = [ "noatime" "compress-force=zstd:2" "discard=async" "commit=120" "clear_cache" "space_cache=v2" "subvol=@HOME" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/536d2db0-bc70-474c-aba3-db66a81c12fe";
      fsType = "btrfs";
      options = [ "noatime" "compress-force=zstd:2" "discard=async" "commit=120" "clear_cache" "space_cache=v2" "subvol=@NIX" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C661-EAE3";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  services.btrfs.autoScrub = {
      enable = true;
      interval = "weekly";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
